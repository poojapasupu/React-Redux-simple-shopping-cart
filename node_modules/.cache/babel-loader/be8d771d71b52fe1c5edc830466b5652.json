{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItemstoCart(state, action) {\n      const newItem = action.payload;\n      const itemExistsinCart = state.items.find(item => item.id === newItem.id);\n\n      if (itemExistsinCart) {\n        itemExistsinCart.quantity++;\n        itemExistsinCart.totalPrice = +newItem.price;\n      } else {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      }\n    },\n\n    removeItemsfromCart(state, action) {\n      const id = action.payload;\n      const itemExistsinCart = state.items.find(item => item.id === id);\n\n      if (itemExistsinCart.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        itemExistsinCart.quantity--;\n        itemExistsinCart.totalPrice = -itemExistsinCart.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/poojapasupu/Documents/react_workspace/16-advanced-redux/src/store/cart-slice.js"],"names":["createSlice","initialState","items","totalQuantity","totalAmount","cartSlice","name","reducers","addItemstoCart","state","action","newItem","payload","itemExistsinCart","find","item","id","quantity","totalPrice","price","push","removeItemsfromCart","filter","cartActions","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,aAAa,EAAE,CAFE;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAC,MADqB;AAE1BL,EAAAA,YAF0B;AAG1BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAe;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,gBAAgB,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAkBC,IAAD,IAASA,IAAI,CAACC,EAAL,KAAUL,OAAO,CAACK,EAA5C,CAAzB;;AACA,UAAGH,gBAAH,EAAoB;AAChBA,QAAAA,gBAAgB,CAACI,QAAjB;AACAJ,QAAAA,gBAAgB,CAACK,UAAjB,GAA8B,CAACP,OAAO,CAACQ,KAAvC;AACH,OAHD,MAGK;AACDV,QAAAA,KAAK,CAACP,KAAN,CAAYkB,IAAZ,CAAiB;AACbJ,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADC;AAEbV,UAAAA,IAAI,EAAEK,OAAO,CAACL,IAFD;AAGba,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAHF;AAIbF,UAAAA,QAAQ,EAAE,CAJG;AAKbC,UAAAA,UAAU,EAAEP,OAAO,CAACQ;AALP,SAAjB;AAOH;AACJ,KAhBK;;AAiBNE,IAAAA,mBAAmB,CAACZ,KAAD,EAAQC,MAAR,EAAe;AAC9B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,gBAAgB,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAkBC,IAAD,IAASA,IAAI,CAACC,EAAL,KAAUA,EAApC,CAAzB;;AACA,UAAGH,gBAAgB,CAACI,QAAjB,KAA8B,CAAjC,EAAmC;AAC/BR,QAAAA,KAAK,CAACP,KAAN,GAAcO,KAAK,CAACP,KAAN,CAAYoB,MAAZ,CAAoBP,IAAD,IAASA,IAAI,CAACC,EAAL,KAAUA,EAAtC,CAAd;AACH,OAFD,MAEK;AACDH,QAAAA,gBAAgB,CAACI,QAAjB;AACAJ,QAAAA,gBAAgB,CAACK,UAAjB,GAA8B,CAACL,gBAAgB,CAACM,KAAhD;AACH;AAEJ;;AA3BK;AAHgB,CAAD,CAA7B;AAkCA,OAAO,MAAMI,WAAW,GAAGlB,SAAS,CAACmB,OAA9B;AACP,eAAenB,SAAS,CAACoB,OAAzB","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\n\nconst initialState = {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n};\n\nconst cartSlice = createSlice({\n    name:'cart',\n    initialState,\n    reducers: {\n        addItemstoCart(state, action){\n            const newItem = action.payload;\n            const itemExistsinCart = state.items.find((item)=>(item.id===newItem.id));\n            if(itemExistsinCart){\n                itemExistsinCart.quantity++;\n                itemExistsinCart.totalPrice = +newItem.price;\n            }else{\n                state.items.push({\n                    id: newItem.id,\n                    name: newItem.name,\n                    price: newItem.price,\n                    quantity: 1,\n                    totalPrice: newItem.price\n                });\n            }\n        },\n        removeItemsfromCart(state, action){\n            const id = action.payload;\n            const itemExistsinCart = state.items.find((item)=>(item.id===id));\n            if(itemExistsinCart.quantity === 1){\n                state.items = state.items.filter((item)=>(item.id!==id));\n            }else{\n                itemExistsinCart.quantity--;\n                itemExistsinCart.totalPrice = -itemExistsinCart.price;\n            }\n\n        }\n    }\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}