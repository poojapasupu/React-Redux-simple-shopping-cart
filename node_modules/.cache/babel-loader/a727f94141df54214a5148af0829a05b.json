{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItemstoCart(state, action) {\n      const newItem = action.payload;\n      const itemExistsinCart = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (itemExistsinCart) {\n        itemExistsinCart.quantity++;\n        itemExistsinCart.totalPrice += newItem.price;\n      } else {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      }\n    },\n\n    removeItemsfromCart(state, action) {\n      const id = action.payload;\n      const itemExistsinCart = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (itemExistsinCart.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        itemExistsinCart.quantity--;\n        itemExistsinCart.totalPrice -= itemExistsinCart.price;\n      }\n    },\n\n    replaceCart(state, action) {\n      state.items = action.payload.items;\n      state.totalQuantity = action.payload.totalQuantity;\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/poojapasupu/Documents/react_workspace/16-advanced-redux/src/store/cart-slice.js"],"names":["createSlice","initialState","items","totalQuantity","changed","cartSlice","name","reducers","addItemstoCart","state","action","newItem","payload","itemExistsinCart","find","item","id","quantity","totalPrice","price","push","title","removeItemsfromCart","filter","replaceCart","cartActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,aAAa,EAAE,CAFI;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,gBAAgB,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CACtBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EADP,CAAzB;AAGAP,MAAAA,KAAK,CAACN,aAAN;;AACA,UAAIU,gBAAJ,EAAsB;AACpBA,QAAAA,gBAAgB,CAACI,QAAjB;AACAJ,QAAAA,gBAAgB,CAACK,UAAjB,IAA+BP,OAAO,CAACQ,KAAvC;AACD,OAHD,MAGO;AACLV,QAAAA,KAAK,CAACP,KAAN,CAAYkB,IAAZ,CAAiB;AACfJ,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADG;AAEfV,UAAAA,IAAI,EAAEK,OAAO,CAACU,KAFC;AAGfF,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAHA;AAIfF,UAAAA,QAAQ,EAAE,CAJK;AAKfC,UAAAA,UAAU,EAAEP,OAAO,CAACQ;AALL,SAAjB;AAOD;AACF,KAnBO;;AAoBRG,IAAAA,mBAAmB,CAACb,KAAD,EAAQC,MAAR,EAAgB;AACjC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,gBAAgB,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAzB;AACAP,MAAAA,KAAK,CAACN,aAAN;;AACA,UAAIU,gBAAgB,CAACI,QAAjB,KAA8B,CAAlC,EAAqC;AACnCR,QAAAA,KAAK,CAACP,KAAN,GAAcO,KAAK,CAACP,KAAN,CAAYqB,MAAZ,CAAoBR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;AACD,OAFD,MAEO;AACLH,QAAAA,gBAAgB,CAACI,QAAjB;AACAJ,QAAAA,gBAAgB,CAACK,UAAjB,IAA+BL,gBAAgB,CAACM,KAAhD;AACD;AACF,KA9BO;;AAgCRK,IAAAA,WAAW,CAACf,KAAD,EAAQC,MAAR,EAAe;AACxBD,MAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACE,OAAP,CAAeV,KAA7B;AACAO,MAAAA,KAAK,CAACN,aAAN,GAAsBO,MAAM,CAACE,OAAP,CAAeT,aAArC;AACD;;AAnCO;AAHkB,CAAD,CAA7B;AA4CA,OAAO,MAAMsB,WAAW,GAAGpB,SAAS,CAACqB,OAA9B;AACP,eAAerB,SAAS,CAACsB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItemstoCart(state, action) {\n      const newItem = action.payload;\n      const itemExistsinCart = state.items.find(\n        (item) => item.id === newItem.id\n      );\n      state.totalQuantity++;\n      if (itemExistsinCart) {\n        itemExistsinCart.quantity++;\n        itemExistsinCart.totalPrice += newItem.price;\n      } else {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n        });\n      }\n    },\n    removeItemsfromCart(state, action) {\n      const id = action.payload;\n      const itemExistsinCart = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      if (itemExistsinCart.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        itemExistsinCart.quantity--;\n        itemExistsinCart.totalPrice -= itemExistsinCart.price;\n      }\n    },\n\n    replaceCart(state, action){\n      state.items = action.payload.items;\n      state.totalQuantity = action.payload.totalQuantity;\n    }\n  },\n});\n\n\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}