{"ast":null,"code":"import { uiSliceActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const sendCartData = cart => {\n  return async dipatchFn => {\n    const sendData = async () => {\n      const response = await fetch(\"https://react-http-55fae-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Error sending data!\");\n      }\n    };\n\n    try {\n      dipatchFn(uiSliceActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\"\n      }));\n      await sendData();\n      dipatchFn(uiSliceActions.showNotification({\n        status: \"success\",\n        title: \"Successful\",\n        message: \"Succesfully Sent Data!\"\n      }));\n    } catch (error) {\n      dipatchFn(uiSliceActions.showNotification({\n        status: \"error\",\n        title: \"Error occurred\",\n        message: \"Error occurred in sending the data!\"\n      }));\n    }\n  };\n};\nexport const receiveCartData = () => {\n  return async dispatchFn => {\n    const receiveData = async () => {\n      const response = await fetch(\"https://react-http-55fae-default-rtdb.firebaseio.com/cart.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Error receiving data!\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartDatafromFetch = await receiveData();\n      dispatchFn(cartActions.replaceCart(cartDatafromFetch));\n    } catch (error) {\n      dispatchFn(uiSliceActions.showNotification({\n        status: \"error\",\n        title: \"Error occurred\",\n        message: \"Error occurred in fetching the data!\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/poojapasupu/Documents/react_workspace/16-advanced-redux/src/store/cart-actions.js"],"names":["uiSliceActions","cartActions","sendCartData","cart","dipatchFn","sendData","response","fetch","method","body","JSON","stringify","items","totalQuantity","ok","Error","showNotification","status","title","message","error","receiveCartData","dispatchFn","receiveData","data","json","cartDatafromFetch","replaceCart"],"mappings":"AAAA,SAASA,cAAT,QAA+B,YAA/B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAGA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO,MAAOC,SAAP,IAAqB;AAC1B,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,KAAK,EAAET,IAAI,CAACS,KAAb;AAAoBC,UAAAA,aAAa,EAAEV,IAAI,CAACU;AAAxC,SAAf;AAFR,OAF0B,CAA5B;;AAOA,UAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;AACF,KAXD;;AAYA,QAAI;AACFX,MAAAA,SAAS,CACPJ,cAAc,CAACgB,gBAAf,CAAgC;AAC9BC,QAAAA,MAAM,EAAE,SADsB;AAE9BC,QAAAA,KAAK,EAAE,YAFuB;AAG9BC,QAAAA,OAAO,EAAE;AAHqB,OAAhC,CADO,CAAT;AAOA,YAAMd,QAAQ,EAAd;AAEAD,MAAAA,SAAS,CACPJ,cAAc,CAACgB,gBAAf,CAAgC;AAC9BC,QAAAA,MAAM,EAAE,SADsB;AAE9BC,QAAAA,KAAK,EAAE,YAFuB;AAG9BC,QAAAA,OAAO,EAAE;AAHqB,OAAhC,CADO,CAAT;AAOD,KAjBD,CAiBE,OAAOC,KAAP,EAAc;AACdhB,MAAAA,SAAS,CACPJ,cAAc,CAACgB,gBAAf,CAAgC;AAC9BC,QAAAA,MAAM,EAAE,OADsB;AAE9BC,QAAAA,KAAK,EAAE,gBAFuB;AAG9BC,QAAAA,OAAO,EAAE;AAHqB,OAAhC,CADO,CAAT;AAOD;AACF,GAvCD;AAwCD,CAzCM;AA2CP,OAAO,MAAME,eAAe,GAAG,MAAM;AACnC,SAAO,MAAOC,UAAP,IAAsB;AAC3B,UAAMC,WAAW,GAAG,YAAY;AAC9B,YAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMS,IAAI,GAAG,MAAMlB,QAAQ,CAACmB,IAAT,EAAnB;AACA,aAAOD,IAAP;AACD,KAVD;;AAYA,QAAI;AACA,YAAME,iBAAiB,GAAG,MAAMH,WAAW,EAA3C;AACAD,MAAAA,UAAU,CAACrB,WAAW,CAAC0B,WAAZ,CAAwBD,iBAAxB,CAAD,CAAV;AAED,KAJH,CAII,OAAON,KAAP,EAAc;AACdE,MAAAA,UAAU,CACRtB,cAAc,CAACgB,gBAAf,CAAgC;AAC9BC,QAAAA,MAAM,EAAE,OADsB;AAE9BC,QAAAA,KAAK,EAAE,gBAFuB;AAG9BC,QAAAA,OAAO,EAAE;AAHqB,OAAhC,CADQ,CAAV;AAOD;AACJ,GA1BD;AA2BD,CA5BM","sourcesContent":["import { uiSliceActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\n\nexport const sendCartData = (cart) => {\n  return async (dipatchFn) => {\n    const sendData = async () => {\n      const response = await fetch(\n        \"https://react-http-55fae-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({items: cart.items, totalQuantity: cart.totalQuantity}),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Error sending data!\");\n      }\n    };\n    try {\n      dipatchFn(\n        uiSliceActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending cart data!\",\n        })\n      );\n      await sendData();\n\n      dipatchFn(\n        uiSliceActions.showNotification({\n          status: \"success\",\n          title: \"Successful\",\n          message: \"Succesfully Sent Data!\",\n        })\n      );\n    } catch (error) {\n      dipatchFn(\n        uiSliceActions.showNotification({\n          status: \"error\",\n          title: \"Error occurred\",\n          message: \"Error occurred in sending the data!\",\n        })\n      );\n    }\n  };\n};\n\nexport const receiveCartData = () => {\n  return async (dispatchFn) => {\n    const receiveData = async () => {\n      const response = await fetch(\n        \"https://react-http-55fae-default-rtdb.firebaseio.com/cart.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Error receiving data!\");\n      }\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n        const cartDatafromFetch = await receiveData();\n        dispatchFn(cartActions.replaceCart(cartDatafromFetch));\n        \n      } catch (error) {\n        dispatchFn(\n          uiSliceActions.showNotification({\n            status: \"error\",\n            title: \"Error occurred\",\n            message: \"Error occurred in fetching the data!\",\n          })\n        );\n      }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}