{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={items:[],totalQuantity:0,changed:false};var cartSlice=createSlice({name:\"cart\",initialState:initialState,reducers:{addItemstoCart:function addItemstoCart(state,action){var newItem=action.payload;var itemExistsinCart=state.items.find(function(item){return item.id===newItem.id;});state.totalQuantity++;state.changed=true;if(itemExistsinCart){itemExistsinCart.quantity++;itemExistsinCart.totalPrice+=newItem.price;}else{state.items.push({id:newItem.id,name:newItem.title,price:newItem.price,quantity:1,totalPrice:newItem.price});}},removeItemsfromCart:function removeItemsfromCart(state,action){var id=action.payload;var itemExistsinCart=state.items.find(function(item){return item.id===id;});state.totalQuantity--;state.changed=true;if(itemExistsinCart.quantity===1){state.items=state.items.filter(function(item){return item.id!==id;});}else{itemExistsinCart.quantity--;itemExistsinCart.totalPrice-=itemExistsinCart.price;}},replaceCart:function replaceCart(state,action){state.items=action.payload.items;state.totalQuantity=action.payload.totalQuantity;}}});export var cartActions=cartSlice.actions;export default cartSlice.reducer;","map":{"version":3,"sources":["/Users/poojapasupu/Documents/GitHub-repos/React-Redux-simple-shopping-cart/src/store/cart-slice.js"],"names":["createSlice","initialState","items","totalQuantity","changed","cartSlice","name","reducers","addItemstoCart","state","action","newItem","payload","itemExistsinCart","find","item","id","quantity","totalPrice","price","push","title","removeItemsfromCart","filter","replaceCart","cartActions","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,EADY,CAEnBC,aAAa,CAAE,CAFI,CAGnBC,OAAO,CAAE,KAHU,CAArB,CAMA,GAAMC,CAAAA,SAAS,CAAGL,WAAW,CAAC,CAC5BM,IAAI,CAAE,MADsB,CAE5BL,YAAY,CAAZA,YAF4B,CAG5BM,QAAQ,CAAE,CACRC,cADQ,yBACOC,KADP,CACcC,MADd,CACsB,CAC5B,GAAMC,CAAAA,OAAO,CAAGD,MAAM,CAACE,OAAvB,CACA,GAAMC,CAAAA,gBAAgB,CAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CACvB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYL,OAAO,CAACK,EAA9B,EADuB,CAAzB,CAGAP,KAAK,CAACN,aAAN,GACAM,KAAK,CAACL,OAAN,CAAgB,IAAhB,CACA,GAAIS,gBAAJ,CAAsB,CACpBA,gBAAgB,CAACI,QAAjB,GACAJ,gBAAgB,CAACK,UAAjB,EAA+BP,OAAO,CAACQ,KAAvC,CACD,CAHD,IAGO,CACLV,KAAK,CAACP,KAAN,CAAYkB,IAAZ,CAAiB,CACfJ,EAAE,CAAEL,OAAO,CAACK,EADG,CAEfV,IAAI,CAAEK,OAAO,CAACU,KAFC,CAGfF,KAAK,CAAER,OAAO,CAACQ,KAHA,CAIfF,QAAQ,CAAE,CAJK,CAKfC,UAAU,CAAEP,OAAO,CAACQ,KALL,CAAjB,EAOD,CACF,CApBO,CAqBRG,mBArBQ,8BAqBYb,KArBZ,CAqBmBC,MArBnB,CAqB2B,CACjC,GAAMM,CAAAA,EAAE,CAAGN,MAAM,CAACE,OAAlB,CACA,GAAMC,CAAAA,gBAAgB,CAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYA,EAAtB,EAAjB,CAAzB,CACAP,KAAK,CAACN,aAAN,GACAM,KAAK,CAACL,OAAN,CAAgB,IAAhB,CACA,GAAIS,gBAAgB,CAACI,QAAjB,GAA8B,CAAlC,CAAqC,CACnCR,KAAK,CAACP,KAAN,CAAcO,KAAK,CAACP,KAAN,CAAYqB,MAAZ,CAAmB,SAACR,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYA,EAAtB,EAAnB,CAAd,CACD,CAFD,IAEO,CACLH,gBAAgB,CAACI,QAAjB,GACAJ,gBAAgB,CAACK,UAAjB,EAA+BL,gBAAgB,CAACM,KAAhD,CACD,CACF,CAhCO,CAkCRK,WAlCQ,sBAkCIf,KAlCJ,CAkCWC,MAlCX,CAkCkB,CACxBD,KAAK,CAACP,KAAN,CAAcQ,MAAM,CAACE,OAAP,CAAeV,KAA7B,CACAO,KAAK,CAACN,aAAN,CAAsBO,MAAM,CAACE,OAAP,CAAeT,aAArC,CACD,CArCO,CAHkB,CAAD,CAA7B,CA8CA,MAAO,IAAMsB,CAAAA,WAAW,CAAGpB,SAAS,CAACqB,OAA9B,CACP,cAAerB,CAAAA,SAAS,CAACsB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItemstoCart(state, action) {\n      const newItem = action.payload;\n      const itemExistsinCart = state.items.find(\n        (item) => item.id === newItem.id\n      );\n      state.totalQuantity++;\n      state.changed = true;\n      if (itemExistsinCart) {\n        itemExistsinCart.quantity++;\n        itemExistsinCart.totalPrice += newItem.price;\n      } else {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n        });\n      }\n    },\n    removeItemsfromCart(state, action) {\n      const id = action.payload;\n      const itemExistsinCart = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (itemExistsinCart.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        itemExistsinCart.quantity--;\n        itemExistsinCart.totalPrice -= itemExistsinCart.price;\n      }\n    },\n\n    replaceCart(state, action){\n      state.items = action.payload.items;\n      state.totalQuantity = action.payload.totalQuantity;\n    }\n  },\n});\n\n\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}