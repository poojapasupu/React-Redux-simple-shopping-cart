{"ast":null,"code":"var _jsxFileName = \"/Users/poojapasupu/Documents/react_workspace/16-advanced-redux/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { uiSliceActions } from './store/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const isCartVisible = useSelector(state => state.uiReducer.isCartVisible);\n  const cart = useSelector(state => state.cartReducer);\n  const dipatchFn = useDispatch();\n  useEffect(() => {\n    const sendCartInfo = async () => {\n      try {\n        const response = await fetch(\"https://react-http-55fae-default-rtdb.firebaseio.com/cart.json\", {\n          method: \"PUT\",\n          body: JSON.stringify(cart)\n        });\n\n        if (!response.ok) {\n          throw new Error('Error sending data!');\n        }\n\n        const data = await response.json();\n        dipatchFn(uiSliceActions.showNotification());\n      } catch (error) {}\n    };\n\n    sendCartInfo();\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [isCartVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jdpDocuJ5uuqHdX0PMz7M8UJTXs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/poojapasupu/Documents/react_workspace/16-advanced-redux/src/App.js"],"names":["Cart","Layout","Products","useSelector","useDispatch","useEffect","uiSliceActions","App","isCartVisible","state","uiReducer","cart","cartReducer","dipatchFn","sendCartInfo","response","fetch","method","body","JSON","stringify","ok","Error","data","json","showNotification","error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,cAAR,QAA6B,kBAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,aAAa,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBF,aAA5B,CAAjC;AACA,QAAMG,IAAI,GAAGR,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACG,WAAlB,CAAxB;AACA,QAAMC,SAAS,GAAGT,WAAW,EAA7B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,YAAY,GAAG,YAAY;AAC/B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;AACEC,UAAAA,MAAM,EAAE,KADV;AAEEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AAFR,SAF0B,CAA5B;;AAOA,YAAI,CAACI,QAAQ,CAACM,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAED,cAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAX,QAAAA,SAAS,CAACP,cAAc,CAACmB,gBAAf,EAAD,CAAT;AAED,OAfD,CAeE,OAAOC,KAAP,EAAc,CAEf;AACF,KAnBD;;AAqBAZ,IAAAA,YAAY;AACb,GAvBQ,EAuBN,CAACH,IAAD,CAvBM,CAAT;AAyBA,sBACE,QAAC,MAAD;AAAA,eACGH,aAAa,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADpB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApCQD,G;UACeJ,W,EACTA,W,EACKC,W;;;KAHXG,G;AAsCT,eAAeA,GAAf","sourcesContent":["import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {uiSliceActions} from './store/ui-slice';\n\nfunction App() {\n  const isCartVisible = useSelector((state) => state.uiReducer.isCartVisible);\n  const cart = useSelector((state) => state.cartReducer);\n  const dipatchFn = useDispatch();\n\n  useEffect(() => {\n    const sendCartInfo = async () => {\n      try {\n        const response = await fetch(\n          \"https://react-http-55fae-default-rtdb.firebaseio.com/cart.json\",\n          {\n            method: \"PUT\",\n            body: JSON.stringify(cart),\n          }\n        );\n        if (!response.ok) {\n          throw new Error('Error sending data!');\n        }\n\n        const data = await response.json();\n        dipatchFn(uiSliceActions.showNotification());\n\n      } catch (error) {\n\n      }\n    };\n\n    sendCartInfo();\n  }, [cart]);\n\n  return (\n    <Layout>\n      {isCartVisible && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}