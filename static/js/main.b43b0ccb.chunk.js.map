{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/redux-logic.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","addItemstoCart","state","action","newItem","payload","itemExistsinCart","find","item","id","quantity","totalPrice","price","push","title","removeItemsfromCart","filter","replaceCart","cartActions","actions","CartItem","total","dispatchFn","useDispatch","toFixed","itemprice","details","onClick","bind","Cart","useSelector","cartReducer","cart","map","cartItem","uiSlice","isCartVisible","notification","toggleCart","showNotification","status","message","uiSliceActions","CartButton","button","badge","MainHeader","header","Layout","ProductItem","description","dummyproducts","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","uiReducer","useEffect","a","receiveData","fetch","response","ok","Error","json","data","cartDatafromFetch","dipatchFn","sendData","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","uiSliceReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b43b0ccb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D5S5\",\"error\":\"Notification_error__2ILHS\",\"success\":\"Notification_success__3Ww1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItemstoCart(state, action) {\n      const newItem = action.payload;\n      const itemExistsinCart = state.items.find(\n        (item) => item.id === newItem.id\n      );\n      state.totalQuantity++;\n      state.changed = true;\n      if (itemExistsinCart) {\n        itemExistsinCart.quantity++;\n        itemExistsinCart.totalPrice += newItem.price;\n      } else {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n        });\n      }\n    },\n    removeItemsfromCart(state, action) {\n      const id = action.payload;\n      const itemExistsinCart = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (itemExistsinCart.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        itemExistsinCart.quantity--;\n        itemExistsinCart.totalPrice -= itemExistsinCart.price;\n      }\n    },\n\n    replaceCart(state, action){\n      state.items = action.payload.items;\n      state.totalQuantity = action.payload.totalQuantity;\n    }\n  },\n});\n\n\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n","import classes from './CartItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport {cartActions} from '../../store/cart-slice';\n\nconst CartItem = (props) => {\n  const { id, title, quantity, total, price } = props.item;\n  const dispatchFn = useDispatch();\n\n  const onAdd = (item) => {\n    dispatchFn(cartActions.addItemstoCart(item));\n  };\n  const onSub = (id) => {\n    dispatchFn(cartActions.removeItemsfromCart(id));\n  };\n\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n        <button onClick={onSub.bind(null,id)}>-</button>\n          <button onClick={onAdd.bind(null,{id,title,price})}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport { useSelector } from 'react-redux';\n\nconst Cart = (props) => {\n\n  const items = useSelector((state)=>(state.cartReducer.items));\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {items.map((cartItem)=>(<CartItem\n          key= {cartItem.id}\n          item={{ id: cartItem.id, title: cartItem.name, quantity: cartItem.quantity , total: cartItem.totalPrice, price: cartItem.price }}\n        />))}\n        \n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {isCartVisible: false, notification: null};\n\nconst uiSlice = createSlice({\n    name:'UI',\n    initialState,\n    reducers:{\n        toggleCart(state){\n            state.isCartVisible = !state.isCartVisible;\n        },\n        showNotification(state, action){\n            state.notification= { status: action.payload.status, title: action.payload.title, message: action.payload.message};\n        }\n    }\n});\n\nexport const uiSliceActions = uiSlice.actions;\n\nexport default uiSlice.reducer;","import classes from './CartButton.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {uiSliceActions} from '../../store/ui-slice';\n\n\nconst CartButton = (props) => {\n  const dispatchFn = useDispatch();\n  const totalQuantity = useSelector((state)=>(state.cartReducer.totalQuantity));\n\n  const clickHandler = () => {\n    dispatchFn(uiSliceActions.toggleCart());\n\n  };\n\n  return (\n    <button onClick={clickHandler} className={classes.button}>\n      <span>My Cart</span>\n  <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport {cartActions} from '../../store/cart-slice';\n\nconst ProductItem = (props) => {\n  const { id, title, price, description } = props;\n  const dispatchFn = useDispatch();\n\n  const onAddItem = () => {\n    dispatchFn(cartActions.addItemstoCart({\n      id,\n     title,\n      price,\n    }))\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={onAddItem}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst dummyproducts = [\n  {\n    id: \"p1\",\n    price: 6,\n    title: \"book\",\n    description: \"first book\",\n  },\n  {\n    id: \"p2\",\n    price: 8,\n    title: \"cook\",\n    description: \"first cook\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {dummyproducts.map((product)=>{return <ProductItem\n        key={product.id}\n        id={product.id}\n          title={product.title}\n          price={product.price}\n          description={product.description}\n        />})}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\n\nconst Notification = (props) => {\n  let specialClasses = '';\n\n  if (props.status === 'error') {\n    specialClasses = classes.error;\n  }\n  if (props.status === 'success') {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;","import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport Notification from \"./components/UI/Notification\";\nimport { sendCartData, receiveCartData } from \"./store/cart-actions\";\n\nlet isInitial = true;\n\nfunction App() {\n  const isCartVisible = useSelector((state) => state.uiReducer.isCartVisible);\n  const cart = useSelector((state) => state.cartReducer);\n  const notification = useSelector((state) => state.uiReducer.notification);\n  const dispatchFn = useDispatch();\n\n  useEffect(() => {\n    dispatchFn(receiveCartData());\n  }, [dispatchFn]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (cart.changed) {\n      dispatchFn(sendCartData(cart));\n    }\n  }, [cart, dispatchFn]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          message={notification.message}\n          title={notification.title}\n        />\n      )}\n      <Layout>\n        {isCartVisible && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { uiSliceActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\n\nexport const sendCartData = (cart) => {\n  return async (dipatchFn) => {\n    const sendData = async () => {\n      const response = await fetch(\n        \"https://react-http-55fae-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({items: cart.items, totalQuantity: cart.totalQuantity}),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Error sending data!\");\n      }\n    };\n    try {\n      dipatchFn(\n        uiSliceActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending cart data!\",\n        })\n      );\n      await sendData();\n\n      dipatchFn(\n        uiSliceActions.showNotification({\n          status: \"success\",\n          title: \"Successful\",\n          message: \"Succesfully Sent Data!\",\n        })\n      );\n    } catch (error) {\n      dipatchFn(\n        uiSliceActions.showNotification({\n          status: \"error\",\n          title: \"Error occurred\",\n          message: \"Error occurred in sending the data!\",\n        })\n      );\n    }\n  };\n};\n\nexport const receiveCartData = () => {\n  return async (dispatchFn) => {\n    const receiveData = async () => {\n      const response = await fetch(\n        \"https://react-http-55fae-default-rtdb.firebaseio.com/cart.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Error receiving data!\");\n      }\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n        const cartDatafromFetch = await receiveData();\n        dispatchFn(cartActions.replaceCart({\n          items: cartDatafromFetch.items || [],\n          totalQuantity: cartDatafromFetch.totalQuantity\n      }));\n        \n      } catch (error) {\n        dispatchFn(\n          uiSliceActions.showNotification({\n            status: \"error\",\n            title: \"Error occurred\",\n            message: \"Error occurred in fetching the data!\",\n          })\n        );\n      }\n  };\n};\n","import {configureStore} from '@reduxjs/toolkit';\nimport uiSliceReducer from './ui-slice';\nimport cartReducer from './cart-slice';\n\nconst store = configureStore({\n    reducer:{\n        uiReducer: uiSliceReducer,\n        cartReducer\n    }\n});\n\nexport default store;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store/redux-logic';\n\nReactDOM.render(<Provider store={store}><App /> </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}